{"version":3,"sources":["App.test.js"],"names":["store","reducer","thunk","test","screen","getByTestId","container","expect","innerHTML","toMatchSnapshot","err","Error","componentWillUnmount"],"mappings":";;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;AAGA,MAAMA,KAAK,GAAG,wBAAYC,iBAAZ,EAAoB,4BAAgBC,mBAAhB,CAApB,CAAd;AAGAC,IAAI,CAAC,0BAAD,EAA4B,YAAY;AACzC,MAAG;AACL,UAAM;AAACC,MAAAA,MAAD;AAAQC,MAAAA,WAAR;AAAoBC,MAAAA;AAApB,QAAiC,kCAAO,6BAAC,oBAAD;AAAU,MAAA,KAAK,EAAEN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAwB,6BAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,CAAP,CAAvC;AACGO,IAAAA,MAAM,CAACD,SAAS,CAACE,SAAX,CAAN,CAA4BC,eAA5B;AACA,GAHD,CAIA,OAAMC,GAAN,EAAU;AACT,UAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AACA,GAND,SAOO;AACNJ,IAAAA,SAAS,CAACM,oBAAV;AACA;AAGH,CAbG,CAAJ","sourcesContent":["import React from 'react';\nimport App from './App';\n\nimport logo from './img/tgc1.png'\nimport me from './img/me.png'\nimport wavio from './img/wave.png'\nimport { render, fireEvent, waitFor, screen } from '@testing-library/react'\n\nimport {createStore,applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {reducer} from './redux/reducers'\nimport {Provider} from 'react-redux'\n\n\nconst store = createStore(reducer,applyMiddleware(thunk))\n\n\ntest('renders without crashing',async () => {\n\t\t\ttry{\n\tconst {screen,getByTestId,container} = render(<Provider store={store}><App /></Provider>)\n\t\t\t\texpect(container.innerHTML).toMatchSnapshot()\n\t\t\t}\n\t\t\tcatch(err){\n\t\t\t\tthrow new Error(err)\n\t\t\t}\n\t\t\tfinally{\n\t\t\t\tcontainer.componentWillUnmount()\n\t\t\t}\n\t\t\t\n\n});\n"]}