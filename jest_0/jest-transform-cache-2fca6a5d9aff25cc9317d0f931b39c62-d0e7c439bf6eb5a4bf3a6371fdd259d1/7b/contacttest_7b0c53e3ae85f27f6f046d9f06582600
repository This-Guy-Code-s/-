81bbd37c81e4ac8ded86cff2472b0c0f
"use strict";

var _interopRequireDefault = require("/home/tgc/Desktop/newSite/-/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _Contact = _interopRequireDefault(require("../Contact"));

var _Form = _interopRequireDefault(require("../Form"));

var _react2 = require("@testing-library/react");

var _redux = require("redux");

var _reduxThunk = _interopRequireDefault(require("redux-thunk"));

var _reducers = require("../../../redux/reducers");

var _reactRedux = require("react-redux");

var _jsxFileName = "/home/tgc/Desktop/newSite/-/src/comps/home/testing/contact.test.js";
const store = (0, _redux.createStore)(_reducers.reducer, (0, _redux.applyMiddleware)(_reduxThunk.default));
const props = {
  name: 'Guy',
  email: 'GuyTheGreat@gmail.com',
  message: 'this is the message',
  send: jest.fn()
};
test('Form renders with out crashing', async () => {
  const {
    fireEvent,
    getAllByPlaceholderText,
    getByLabelText
  } = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {
    store: store,
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 24,
      columnNumber: 69
    }
  }, /*#__PURE__*/_react.default.createElement(_Form.default, Object.assign({}, props, {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 24,
      columnNumber: 93
    }
  }))));
  let nameLabel = getByLabelText('Name:');
  let emailLabel = getByLabelText('Email:');
  let msgLabel = getByLabelText('Message:');
  let nameVal = getAllByPlaceholderText('Name...');
  let emailVal = getAllByPlaceholderText('Email...');
  let msgVal = getAllByPlaceholderText('Message...');
  expect(nameVal.value).toMatch('undefined');
  expect(emailVal.value).toMatch('undefined');
  expect(msgVal.value).toMatch('undefined');
  nameVal.value = props.name;
  emailVal.value = props.email;
  msgVal.value = props.message;
  expect(nameVal.value).toMatch('Guy');
  expect(emailVal.value).toMatch('GuyTheGreat@gmail.com');
  expect(emailVal.value).toMatch(/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/);
  expect(msgVal.value).toMatch('this is the message');
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRhY3QudGVzdC5qcyJdLCJuYW1lcyI6WyJzdG9yZSIsInJlZHVjZXIiLCJ0aHVuayIsInByb3BzIiwibmFtZSIsImVtYWlsIiwibWVzc2FnZSIsInNlbmQiLCJqZXN0IiwiZm4iLCJ0ZXN0IiwiZmlyZUV2ZW50IiwiZ2V0QWxsQnlQbGFjZWhvbGRlclRleHQiLCJnZXRCeUxhYmVsVGV4dCIsIm5hbWVMYWJlbCIsImVtYWlsTGFiZWwiLCJtc2dMYWJlbCIsIm5hbWVWYWwiLCJlbWFpbFZhbCIsIm1zZ1ZhbCIsImV4cGVjdCIsInZhbHVlIiwidG9NYXRjaCJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUVBOztBQUNBOztBQUNBOztBQUNBOzs7QUFHQSxNQUFNQSxLQUFLLEdBQUcsd0JBQVlDLGlCQUFaLEVBQW9CLDRCQUFnQkMsbUJBQWhCLENBQXBCLENBQWQ7QUFHQSxNQUFNQyxLQUFLLEdBQUc7QUFDYkMsRUFBQUEsSUFBSSxFQUFDLEtBRFE7QUFFYkMsRUFBQUEsS0FBSyxFQUFDLHVCQUZPO0FBR2JDLEVBQUFBLE9BQU8sRUFBQyxxQkFISztBQUliQyxFQUFBQSxJQUFJLEVBQUNDLElBQUksQ0FBQ0MsRUFBTDtBQUpRLENBQWQ7QUFPQUMsSUFBSSxDQUFDLGdDQUFELEVBQW1DLFlBQVU7QUFDaEQsUUFBTTtBQUFFQyxJQUFBQSxTQUFGO0FBQVlDLElBQUFBLHVCQUFaO0FBQW9DQyxJQUFBQTtBQUFwQyxNQUFzRCxrQ0FBTyw2QkFBQyxvQkFBRDtBQUFVLElBQUEsS0FBSyxFQUFFYixLQUFqQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGtCQUF3Qiw2QkFBQyxhQUFELG9CQUFVRyxLQUFWO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsS0FBeEIsQ0FBUCxDQUE1RDtBQUVHLE1BQUlXLFNBQVMsR0FBR0QsY0FBYyxDQUFDLE9BQUQsQ0FBOUI7QUFDQSxNQUFJRSxVQUFVLEdBQUdGLGNBQWMsQ0FBQyxRQUFELENBQS9CO0FBQ0EsTUFBSUcsUUFBUSxHQUFHSCxjQUFjLENBQUMsVUFBRCxDQUE3QjtBQUVBLE1BQUlJLE9BQU8sR0FBR0wsdUJBQXVCLENBQUMsU0FBRCxDQUFyQztBQUNBLE1BQUlNLFFBQVEsR0FBR04sdUJBQXVCLENBQUMsVUFBRCxDQUF0QztBQUNBLE1BQUlPLE1BQU0sR0FBR1AsdUJBQXVCLENBQUMsWUFBRCxDQUFwQztBQUVBUSxFQUFBQSxNQUFNLENBQUNILE9BQU8sQ0FBQ0ksS0FBVCxDQUFOLENBQXNCQyxPQUF0QixDQUE4QixXQUE5QjtBQUNBRixFQUFBQSxNQUFNLENBQUNGLFFBQVEsQ0FBQ0csS0FBVixDQUFOLENBQXVCQyxPQUF2QixDQUErQixXQUEvQjtBQUNBRixFQUFBQSxNQUFNLENBQUNELE1BQU0sQ0FBQ0UsS0FBUixDQUFOLENBQXFCQyxPQUFyQixDQUE2QixXQUE3QjtBQUVBTCxFQUFBQSxPQUFPLENBQUNJLEtBQVIsR0FBZ0JsQixLQUFLLENBQUNDLElBQXRCO0FBQ0FjLEVBQUFBLFFBQVEsQ0FBQ0csS0FBVCxHQUFpQmxCLEtBQUssQ0FBQ0UsS0FBdkI7QUFDQWMsRUFBQUEsTUFBTSxDQUFDRSxLQUFQLEdBQWVsQixLQUFLLENBQUNHLE9BQXJCO0FBRUFjLEVBQUFBLE1BQU0sQ0FBQ0gsT0FBTyxDQUFDSSxLQUFULENBQU4sQ0FBc0JDLE9BQXRCLENBQThCLEtBQTlCO0FBQ0FGLEVBQUFBLE1BQU0sQ0FBQ0YsUUFBUSxDQUFDRyxLQUFWLENBQU4sQ0FBdUJDLE9BQXZCLENBQStCLHVCQUEvQjtBQUNBRixFQUFBQSxNQUFNLENBQUNGLFFBQVEsQ0FBQ0csS0FBVixDQUFOLENBQXVCQyxPQUF2QixDQUErQixzSkFBL0I7QUFDQUYsRUFBQUEsTUFBTSxDQUFDRCxNQUFNLENBQUNFLEtBQVIsQ0FBTixDQUFxQkMsT0FBckIsQ0FBNkIscUJBQTdCO0FBRUgsQ0F4QkcsQ0FBSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nXG5pbXBvcnQgQ29udGFjdEJ0biBmcm9tICcuLi9Db250YWN0J1xuaW1wb3J0IEZvcm0gZnJvbSAnLi4vRm9ybSdcbmltcG9ydCB7IHJlbmRlciB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QnXG5cbmltcG9ydCB7Y3JlYXRlU3RvcmUsYXBwbHlNaWRkbGV3YXJlfSBmcm9tICdyZWR1eCdcbmltcG9ydCB0aHVuayBmcm9tICdyZWR1eC10aHVuaydcbmltcG9ydCB7cmVkdWNlcn0gZnJvbSAnLi4vLi4vLi4vcmVkdXgvcmVkdWNlcnMnXG5pbXBvcnQge1Byb3ZpZGVyfSBmcm9tICdyZWFjdC1yZWR1eCdcblxuXG5jb25zdCBzdG9yZSA9IGNyZWF0ZVN0b3JlKHJlZHVjZXIsYXBwbHlNaWRkbGV3YXJlKHRodW5rKSlcblxuXG5jb25zdCBwcm9wcyA9IHtcblx0bmFtZTonR3V5Jyxcblx0ZW1haWw6J0d1eVRoZUdyZWF0QGdtYWlsLmNvbScsXG5cdG1lc3NhZ2U6J3RoaXMgaXMgdGhlIG1lc3NhZ2UnLFxuXHRzZW5kOmplc3QuZm4oKVxufVxuXG50ZXN0KCdGb3JtIHJlbmRlcnMgd2l0aCBvdXQgY3Jhc2hpbmcnLCBhc3luYyAoKT0+e1xuXHRjb25zdCB7IGZpcmVFdmVudCxnZXRBbGxCeVBsYWNlaG9sZGVyVGV4dCxnZXRCeUxhYmVsVGV4dH0gPSByZW5kZXIoPFByb3ZpZGVyIHN0b3JlPXtzdG9yZX0+PEZvcm0gey4uLnByb3BzfS8+PC9Qcm92aWRlcj4pXG5cdFx0XHRcdFxuXHRcdFx0XHRsZXQgbmFtZUxhYmVsID0gZ2V0QnlMYWJlbFRleHQoJ05hbWU6Jylcblx0XHRcdFx0bGV0IGVtYWlsTGFiZWwgPSBnZXRCeUxhYmVsVGV4dCgnRW1haWw6Jylcblx0XHRcdFx0bGV0IG1zZ0xhYmVsID0gZ2V0QnlMYWJlbFRleHQoJ01lc3NhZ2U6JylcblxuXHRcdFx0XHRsZXQgbmFtZVZhbCA9IGdldEFsbEJ5UGxhY2Vob2xkZXJUZXh0KCdOYW1lLi4uJylcblx0XHRcdFx0bGV0IGVtYWlsVmFsID0gZ2V0QWxsQnlQbGFjZWhvbGRlclRleHQoJ0VtYWlsLi4uJylcblx0XHRcdFx0bGV0IG1zZ1ZhbCA9IGdldEFsbEJ5UGxhY2Vob2xkZXJUZXh0KCdNZXNzYWdlLi4uJylcblxuXHRcdFx0XHRleHBlY3QobmFtZVZhbC52YWx1ZSkudG9NYXRjaCgndW5kZWZpbmVkJylcblx0XHRcdFx0ZXhwZWN0KGVtYWlsVmFsLnZhbHVlKS50b01hdGNoKCd1bmRlZmluZWQnKVxuXHRcdFx0XHRleHBlY3QobXNnVmFsLnZhbHVlKS50b01hdGNoKCd1bmRlZmluZWQnKVxuXG5cdFx0XHRcdG5hbWVWYWwudmFsdWUgPSBwcm9wcy5uYW1lXG5cdFx0XHRcdGVtYWlsVmFsLnZhbHVlID0gcHJvcHMuZW1haWxcblx0XHRcdFx0bXNnVmFsLnZhbHVlID0gcHJvcHMubWVzc2FnZVxuXG5cdFx0XHRcdGV4cGVjdChuYW1lVmFsLnZhbHVlKS50b01hdGNoKCdHdXknKVxuXHRcdFx0XHRleHBlY3QoZW1haWxWYWwudmFsdWUpLnRvTWF0Y2goJ0d1eVRoZUdyZWF0QGdtYWlsLmNvbScpXG5cdFx0XHRcdGV4cGVjdChlbWFpbFZhbC52YWx1ZSkudG9NYXRjaCgvXigoW148PigpW1xcXVxcXFwuLDs6XFxzQFwiXSsoXFwuW148PigpW1xcXVxcXFwuLDs6XFxzQFwiXSspKil8KFwiLitcIikpQCgoXFxbWzAtOV17MSwzfVxcLlswLTldezEsM31cXC5bMC05XXsxLDN9XFwuWzAtOV17MSwzfV0pfCgoW2EtekEtWlxcLTAtOV0rXFwuKStbYS16QS1aXXsyLH0pKSQvKVxuXHRcdFx0XHRleHBlY3QobXNnVmFsLnZhbHVlKS50b01hdGNoKCd0aGlzIGlzIHRoZSBtZXNzYWdlJylcblxufSlcdFx0Il19