{"version":3,"sources":["App.test.js"],"names":["store","reducer","thunk","it","screen","getByTestId","container"],"mappings":";;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;;AAGA,MAAMA,KAAK,GAAG,wBAAYC,iBAAZ,EAAoB,4BAAgBC,mBAAhB,CAApB,CAAd;AAGAC,EAAE,CAAC,0BAAD,EAA6B,MAAM;AACnC;AACD,QAAM;AAACC,IAAAA,MAAD;AAAQC,IAAAA,WAAR;AAAoBC,IAAAA;AAApB,MAAiC,iCAAO,oBAAC,oBAAD;AAAU,IAAA,KAAK,EAAEN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAwB,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,CAAP,CAAvC;AACA,CAHC,CAAF","sourcesContent":["import App from './App';\n\nimport logo from './img/tgc1.png'\nimport me from './img/me.png'\nimport wavio from './img/wave.png'\nimport { render, fireEvent, waitFor, screen } from '@testing-library/react'\n\nimport {createStore,applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {reducer} from './redux/reducers'\nimport {Provider} from 'react-redux'\n\n\nconst store = createStore(reducer,applyMiddleware(thunk))\n\n\nit('renders without crashing', () => {\n  // ReactDOM.render(<Provider store={store}><App /></Provider>, div);\n\tconst {screen,getByTestId,container} = render(<Provider store={store}><App /></Provider>)\n});\n"]}