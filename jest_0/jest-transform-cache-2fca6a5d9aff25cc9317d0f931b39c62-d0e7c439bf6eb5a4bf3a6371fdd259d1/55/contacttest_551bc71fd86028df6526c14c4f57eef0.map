{"version":3,"sources":["contact.test.js"],"names":["store","reducer","thunk","test","container","document","createElement","ReactDOM","render","contactBtn","btnText","expect","toBeTruthy","innerHTML","toMatchSnapshot","includes","console","log","toBeFalsy","form_","findByLabelText"],"mappings":";;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AACA;;AACA;;;AAGA,MAAMA,KAAK,GAAG,wBAAYC,iBAAZ,EAAoB,4BAAgBC,mBAAhB,CAApB,CAAd;AAGAC,IAAI,CAAC,mDAAD,EAAsD,YAAU;AACnE,QAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAlB;;AACCC,oBAASC,MAAT,eAAgB,6BAAC,oBAAD;AAAU,IAAA,KAAK,EAAER,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAwB,6BAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,CAAhB,EAAkEI,SAAlE,EAFkE,CAGjE;AACA;;;AACA,QAAMK,UAAU,GAAG,wBAAW,YAAX,CAAnB;AACA,QAAMC,OAAO,GAAG,yBAAYN,SAAZ,CAAhB;AACDO,EAAAA,MAAM,CAACP,SAAD,CAAN,CAAkBQ,UAAlB,GAPkE,CAOpC;;AAC9BD,EAAAA,MAAM,CAACP,SAAS,CAACS,SAAX,CAAN,CAA4BC,eAA5B;AAEDH,EAAAA,MAAM,CAACP,SAAS,CAACS,SAAV,CAAoBE,QAApB,CAA6B,SAA7B,CAAD,CAAN,CAAgDH,UAAhD,GAVmE,CAUP;;AAE3DD,EAAAA,MAAM,CAACF,UAAD,CAAN,CAAmBG,UAAnB,GAZkE,CAYnC;;AAC/BD,EAAAA,MAAM,CAACF,UAAD,CAAN,CAAmBK,eAAnB;AAEFE,EAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AAECC,EAAAA,MAAM,CAACP,SAAS,CAACS,SAAV,CAAoBE,QAApB,CAA6B,OAA7B,CAAD,CAAN,CAA8CG,SAA9C,GAjBmE,CAiBV;AAGzD,CApBG,CAAJ;AAuBAf,IAAI,CAAC,gCAAD,EAAmC,YAAU;AAChD,QAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAlB;;AACCC,oBAASC,MAAT,eAAgB,6BAAC,oBAAD;AAAU,IAAA,KAAK,EAAER,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAwB,6BAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAxB,CAAhB,EAA4DI,SAA5D;;AACE,MAAIe,KAAK,GAAGC,eAAe,CAAC,MAAD,CAA3B;AACDJ,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCb,SAAS,CAACS,SAA7C;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BE,KAA9B;AACF,CANG,CAAJ","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport ContactBtn from '../Contact'\nimport Form from '../Form'\nimport { render, fireEvent, waitFor, \n\tscreen,findByText,getNodeText,createEvent } from '@testing-library/react'\n\nimport {createStore,applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {reducer} from '../../../redux/reducers'\nimport {Provider} from 'react-redux'\n\n\nconst store = createStore(reducer,applyMiddleware(thunk))\n\n\ntest('Button that toggles form renders without crashing', async ()=>{\n\tconst container = document.createElement('div')\n\t\tReactDOM.render(<Provider store={store}><ContactBtn /></Provider>,container)\n\t\t\t//Contact Button\n\t\t\t//container.childNodes[0].childNodes[1]\n\t\t\tconst contactBtn = findByText('Contact Me')\n\t\t\tconst btnText = getNodeText(container)\n\t\texpect(container).toBeTruthy()//the container holding component rendered\n\t\texpect(container.innerHTML).toMatchSnapshot()\n\n\texpect(container.innerHTML.includes('<button')).toBeTruthy()//the container has the toggle button\n\n\t\texpect(contactBtn).toBeTruthy()//the toggle button rendered correctly\n\t\texpect(contactBtn).toMatchSnapshot()\n\nconsole.log(btnText)\n\n\texpect(container.innerHTML.includes('<form')).toBeFalsy()//the container has the form hidden \n\n\n})\n\n\ntest('Form renders with out crashing', async ()=>{\n\tconst container = document.createElement('div')\n\t\tReactDOM.render(<Provider store={store}><Form /></Provider>,container)\n\t\t\t\tlet form_ = findByLabelText('name')\n\t\t\tconsole.log('container========::>',container.innerHTML)\n\t\t\tconsole.log('form========::>',form_)\t\t\n})\t\t"]}