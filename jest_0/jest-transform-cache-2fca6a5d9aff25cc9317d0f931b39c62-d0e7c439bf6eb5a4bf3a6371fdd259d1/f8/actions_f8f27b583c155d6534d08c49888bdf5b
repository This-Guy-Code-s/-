2e0ee65cce29c1d59ca9cf85658ed531
"use strict";

var _interopRequireDefault = require("/home/tgc/Desktop/newSite/-/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fadeEffect = exports.DarkMode = exports.showOrNot = exports.navBar = exports.changeBtnLabel = exports.getMyWork = exports.APP_COMP = exports.ERR = exports.SHOW = exports.MODE = exports.NAVIGATION = exports.BTN = exports.SUCCESS = exports.LOADING = void 0;

var _axios = _interopRequireDefault(require("axios"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _bg = _interopRequireDefault(require("../img/bg6.jpg"));

var _bg6mobile = _interopRequireDefault(require("../img/bg6mobile.jpg"));

const LOADING = 'LOADING';
exports.LOADING = LOADING;
const SUCCESS = 'SUCCESS';
exports.SUCCESS = SUCCESS;
const BTN = 'BTN';
exports.BTN = BTN;
const NAVIGATION = 'NAVIGATION';
exports.NAVIGATION = NAVIGATION;
const MODE = 'MODE';
exports.MODE = MODE;
const SHOW = 'SHOW';
exports.SHOW = SHOW;
const ERR = 'ERR';
exports.ERR = ERR;
let APP_COMP = _styledComponents.default.div`
flex:1;
-webkit-text-align: center;
text-align: center;
background-color:#0C0032;
overflow-x:hidden;
overflow-y:auto;
background-position:center;
-moz-background-size:cover;
-webkit-background-size:cover;
background-size:cover;

  `;
exports.APP_COMP = APP_COMP;

if (window.sessionStorage.getItem('toggleDarkMode') === null) {
  exports.APP_COMP = APP_COMP = _styledComponents.default.div`
flex:1;
-webkit-text-align: center;
text-align: center;
background-color:#0C0032;
overflow-x:hidden;
overflow-y:auto;
background-image:url(${window.innerWidth <= 500 ? _bg.default : _bg6mobile.default});
background-position:center;
-moz-background-size:cover;
-webkit-background-size:cover;
background-size:cover;

  `;
} else if (window.sessionStorage.getItem('toggleDarkMode') !== null && window.sessionStorage.getItem('toggleDarkMode') !== 'true') {
  exports.APP_COMP = APP_COMP = _styledComponents.default.div`
flex:1;
-webkit-text-align: center;
text-align: center;
background-color:#0C0032;
overflow-x:hidden;
overflow-y:auto;
background-image:url(${window.innerWidth <= 500 ? _bg.default : _bg6mobile.default});
background-position:center;
-moz-background-size:cover;
-webkit-background-size:cover;
background-size:cover;

  `;
} else {
  exports.APP_COMP = APP_COMP = _styledComponents.default.div`
flex:1;
-webkit-text-align: center;
text-align: center;
background-color:#0C0032;
overflow-x:hidden;
overflow-y:auto;
background-image:url('');
background-position:center;
-moz-background-size:cover;
-webkit-background-size:cover;
background-size:cover;
 
  `;
} //=============================================================================/


const getMyWork = () => dispatch => {
  //get my work that ill be displaying on my page
  dispatch({
    type: LOADING
  });

  _axios.default.get(process.env.REACT_APP_mywork).then(res => {
    dispatch({
      type: SUCCESS,
      payload: res.data.work
    });
  }).catch(err => {
    dispatch({
      type: ERR,
      payload: err
    });
  });
}; //=============================================================================/


exports.getMyWork = getMyWork;

const changeBtnLabel = label => dispatch => {
  return dispatch({
    type: BTN,
    payload: label
  });
}; //=============================================================================/


exports.changeBtnLabel = changeBtnLabel;

const navBar = whereTo => dispatch => {
  switch (whereTo) {
    case 'Home':
      window.sessionStorage.setItem('nav', whereTo);
      return dispatch({
        type: NAVIGATION,
        payload: whereTo
      });

    case 'Projects':
      window.sessionStorage.setItem('nav', whereTo);
      return dispatch({
        type: NAVIGATION,
        payload: whereTo
      });

    default:
      return false;
  }
}; //=============================================================================/


exports.navBar = navBar;

const showOrNot = choice => dispatch => {
  return dispatch({
    type: SHOW,
    payload: !choice
  });
}; //=============================================================================/


exports.showOrNot = showOrNot;

const DarkMode = mode => dispatch => {
  if (mode) {
    exports.APP_COMP = APP_COMP = _styledComponents.default.div`
flex:1;
-webkit-text-align: center;
text-align: center;
background-color:#0C0032;
overflow-x:hidden;
overflow-y:auto;
background-image:url('');
background-position:center;
-moz-background-size:cover;
-webkit-background-size:cover;
background-size:cover;

  `;
    window.sessionStorage.setItem('toggleDarkMode', mode);
    return dispatch({
      type: MODE,
      payload: mode
    });
  } else {
    exports.APP_COMP = APP_COMP = _styledComponents.default.div`



flex:1;
-webkit-text-align: center;
text-align: center;
background-color:#0C0032;
overflow-x:hidden;
overflow-y:auto;
background-image:url(${window.innerWidth <= 500 ? _bg.default : _bg6mobile.default});
background-position:center;
-moz-background-size:cover;
-webkit-background-size:cover;
background-size:cover;
 
  `;
    window.sessionStorage.setItem('toggleDarkMode', mode);
    return dispatch({
      type: MODE,
      payload: mode
    });
  }
};

exports.DarkMode = DarkMode;

const fadeEffect = () => dispatch => {
  const fadeEffect_ = setInterval(() => {
    // if we don't set opacity 1 in CSS, then
    // it will be equaled to "" -- that's why
    // we check it, and if so, set opacity to 1
    if (!preloader.style.opacity) {
      preloader.style.opacity = 1;
    }

    if (preloader.style.opacity > 0) {
      preloader.style.opacity -= 0.1;
    } else {
      clearInterval(fadeEffect_);
    }
  }, 100);
};

exports.fadeEffect = fadeEffect;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,