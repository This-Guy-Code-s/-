70f3dfc52eab04c6e72c60299d78ae02
"use strict";

var _interopRequireDefault = require("/home/tgc/Desktop/newSite/-/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _Contact = _interopRequireDefault(require("../Contact"));

var _Form = _interopRequireDefault(require("../Form"));

var _react2 = require("@testing-library/react");

var _redux = require("redux");

var _reduxThunk = _interopRequireDefault(require("redux-thunk"));

var _reducers = require("../../../redux/reducers");

var _reactRedux = require("react-redux");

var _jsxFileName = "/home/tgc/Desktop/newSite/-/src/comps/home/testing/contact.test.js";
const store = (0, _redux.createStore)(_reducers.reducer, (0, _redux.applyMiddleware)(_reduxThunk.default));
const props = {
  name: 'Guy',
  email: 'GuyTheGreat@gmail.com',
  message: 'this is the message',
  send: jest.fn()
};
test('Form renders with out crashing', async () => {
  const {
    fireEvent,
    getAllByPlaceholderText,
    getByText,
    getByLabelText
  } = (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {
    store: store,
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 24,
      columnNumber: 79
    }
  }, /*#__PURE__*/_react.default.createElement(_Form.default, Object.assign({}, props, {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 24,
      columnNumber: 103
    }
  }))));
  let nameLabel = getByLabelText('Name:');
  let emailLabel = getByLabelText('Email:');
  let msgLabel = getByLabelText('Message:');
  let nameVal = getAllByPlaceholderText('Name...');
  let emailVal = getAllByPlaceholderText('Email...');
  let msgVal = getAllByPlaceholderText('Message...');
  expect(nameVal.value).toEqual(undefined);
  expect(emailVal.value).toEqual(undefined);
  expect(msgVal.value).toEqual(undefined);
  nameVal.value = props.name;
  emailVal.value = props.email;
  msgVal.value = props.message;
  expect(nameVal.value).toMatch('Guy');
  expect(emailVal.value).toMatch('GuyTheGreat@gmail.com');
  expect(emailVal.value).toMatch(/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/);
  expect(msgVal.value).toMatch('this is the message');
  let button = getByText('Send');
  console.log(fireEvent.click(button));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRhY3QudGVzdC5qcyJdLCJuYW1lcyI6WyJzdG9yZSIsInJlZHVjZXIiLCJ0aHVuayIsInByb3BzIiwibmFtZSIsImVtYWlsIiwibWVzc2FnZSIsInNlbmQiLCJqZXN0IiwiZm4iLCJ0ZXN0IiwiZmlyZUV2ZW50IiwiZ2V0QWxsQnlQbGFjZWhvbGRlclRleHQiLCJnZXRCeVRleHQiLCJnZXRCeUxhYmVsVGV4dCIsIm5hbWVMYWJlbCIsImVtYWlsTGFiZWwiLCJtc2dMYWJlbCIsIm5hbWVWYWwiLCJlbWFpbFZhbCIsIm1zZ1ZhbCIsImV4cGVjdCIsInZhbHVlIiwidG9FcXVhbCIsInVuZGVmaW5lZCIsInRvTWF0Y2giLCJidXR0b24iLCJjb25zb2xlIiwibG9nIiwiY2xpY2siXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7O0FBR0EsTUFBTUEsS0FBSyxHQUFHLHdCQUFZQyxpQkFBWixFQUFvQiw0QkFBZ0JDLG1CQUFoQixDQUFwQixDQUFkO0FBR0EsTUFBTUMsS0FBSyxHQUFHO0FBQ2JDLEVBQUFBLElBQUksRUFBQyxLQURRO0FBRWJDLEVBQUFBLEtBQUssRUFBQyx1QkFGTztBQUdiQyxFQUFBQSxPQUFPLEVBQUMscUJBSEs7QUFJYkMsRUFBQUEsSUFBSSxFQUFDQyxJQUFJLENBQUNDLEVBQUw7QUFKUSxDQUFkO0FBT0FDLElBQUksQ0FBQyxnQ0FBRCxFQUFtQyxZQUFVO0FBQ2hELFFBQU07QUFBRUMsSUFBQUEsU0FBRjtBQUFZQyxJQUFBQSx1QkFBWjtBQUFvQ0MsSUFBQUEsU0FBcEM7QUFBOENDLElBQUFBO0FBQTlDLE1BQWdFLGtDQUFPLDZCQUFDLG9CQUFEO0FBQVUsSUFBQSxLQUFLLEVBQUVkLEtBQWpCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsa0JBQXdCLDZCQUFDLGFBQUQsb0JBQVVHLEtBQVY7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxLQUF4QixDQUFQLENBQXRFO0FBRUcsTUFBSVksU0FBUyxHQUFHRCxjQUFjLENBQUMsT0FBRCxDQUE5QjtBQUNBLE1BQUlFLFVBQVUsR0FBR0YsY0FBYyxDQUFDLFFBQUQsQ0FBL0I7QUFDQSxNQUFJRyxRQUFRLEdBQUdILGNBQWMsQ0FBQyxVQUFELENBQTdCO0FBRUEsTUFBSUksT0FBTyxHQUFHTix1QkFBdUIsQ0FBQyxTQUFELENBQXJDO0FBQ0EsTUFBSU8sUUFBUSxHQUFHUCx1QkFBdUIsQ0FBQyxVQUFELENBQXRDO0FBQ0EsTUFBSVEsTUFBTSxHQUFHUix1QkFBdUIsQ0FBQyxZQUFELENBQXBDO0FBRUFTLEVBQUFBLE1BQU0sQ0FBQ0gsT0FBTyxDQUFDSSxLQUFULENBQU4sQ0FBc0JDLE9BQXRCLENBQThCQyxTQUE5QjtBQUNBSCxFQUFBQSxNQUFNLENBQUNGLFFBQVEsQ0FBQ0csS0FBVixDQUFOLENBQXVCQyxPQUF2QixDQUErQkMsU0FBL0I7QUFDQUgsRUFBQUEsTUFBTSxDQUFDRCxNQUFNLENBQUNFLEtBQVIsQ0FBTixDQUFxQkMsT0FBckIsQ0FBNkJDLFNBQTdCO0FBRUFOLEVBQUFBLE9BQU8sQ0FBQ0ksS0FBUixHQUFnQm5CLEtBQUssQ0FBQ0MsSUFBdEI7QUFDQWUsRUFBQUEsUUFBUSxDQUFDRyxLQUFULEdBQWlCbkIsS0FBSyxDQUFDRSxLQUF2QjtBQUNBZSxFQUFBQSxNQUFNLENBQUNFLEtBQVAsR0FBZW5CLEtBQUssQ0FBQ0csT0FBckI7QUFFQWUsRUFBQUEsTUFBTSxDQUFDSCxPQUFPLENBQUNJLEtBQVQsQ0FBTixDQUFzQkcsT0FBdEIsQ0FBOEIsS0FBOUI7QUFDQUosRUFBQUEsTUFBTSxDQUFDRixRQUFRLENBQUNHLEtBQVYsQ0FBTixDQUF1QkcsT0FBdkIsQ0FBK0IsdUJBQS9CO0FBQ0FKLEVBQUFBLE1BQU0sQ0FBQ0YsUUFBUSxDQUFDRyxLQUFWLENBQU4sQ0FBdUJHLE9BQXZCLENBQStCLHNKQUEvQjtBQUNBSixFQUFBQSxNQUFNLENBQUNELE1BQU0sQ0FBQ0UsS0FBUixDQUFOLENBQXFCRyxPQUFyQixDQUE2QixxQkFBN0I7QUFFQSxNQUFJQyxNQUFNLEdBQUdiLFNBQVMsQ0FBQyxNQUFELENBQXRCO0FBRUFjLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZakIsU0FBUyxDQUFDa0IsS0FBVixDQUFnQkgsTUFBaEIsQ0FBWjtBQUVILENBNUJHLENBQUoiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJ1xuaW1wb3J0IENvbnRhY3RCdG4gZnJvbSAnLi4vQ29udGFjdCdcbmltcG9ydCBGb3JtIGZyb20gJy4uL0Zvcm0nXG5pbXBvcnQgeyByZW5kZXIgfSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0J1xuXG5pbXBvcnQge2NyZWF0ZVN0b3JlLGFwcGx5TWlkZGxld2FyZX0gZnJvbSAncmVkdXgnXG5pbXBvcnQgdGh1bmsgZnJvbSAncmVkdXgtdGh1bmsnXG5pbXBvcnQge3JlZHVjZXJ9IGZyb20gJy4uLy4uLy4uL3JlZHV4L3JlZHVjZXJzJ1xuaW1wb3J0IHtQcm92aWRlcn0gZnJvbSAncmVhY3QtcmVkdXgnXG5cblxuY29uc3Qgc3RvcmUgPSBjcmVhdGVTdG9yZShyZWR1Y2VyLGFwcGx5TWlkZGxld2FyZSh0aHVuaykpXG5cblxuY29uc3QgcHJvcHMgPSB7XG5cdG5hbWU6J0d1eScsXG5cdGVtYWlsOidHdXlUaGVHcmVhdEBnbWFpbC5jb20nLFxuXHRtZXNzYWdlOid0aGlzIGlzIHRoZSBtZXNzYWdlJyxcblx0c2VuZDpqZXN0LmZuKClcbn1cblxudGVzdCgnRm9ybSByZW5kZXJzIHdpdGggb3V0IGNyYXNoaW5nJywgYXN5bmMgKCk9Pntcblx0Y29uc3QgeyBmaXJlRXZlbnQsZ2V0QWxsQnlQbGFjZWhvbGRlclRleHQsZ2V0QnlUZXh0LGdldEJ5TGFiZWxUZXh0fSA9IHJlbmRlcig8UHJvdmlkZXIgc3RvcmU9e3N0b3JlfT48Rm9ybSB7Li4ucHJvcHN9Lz48L1Byb3ZpZGVyPilcblx0XHRcdFx0XG5cdFx0XHRcdGxldCBuYW1lTGFiZWwgPSBnZXRCeUxhYmVsVGV4dCgnTmFtZTonKVxuXHRcdFx0XHRsZXQgZW1haWxMYWJlbCA9IGdldEJ5TGFiZWxUZXh0KCdFbWFpbDonKVxuXHRcdFx0XHRsZXQgbXNnTGFiZWwgPSBnZXRCeUxhYmVsVGV4dCgnTWVzc2FnZTonKVxuXG5cdFx0XHRcdGxldCBuYW1lVmFsID0gZ2V0QWxsQnlQbGFjZWhvbGRlclRleHQoJ05hbWUuLi4nKVxuXHRcdFx0XHRsZXQgZW1haWxWYWwgPSBnZXRBbGxCeVBsYWNlaG9sZGVyVGV4dCgnRW1haWwuLi4nKVxuXHRcdFx0XHRsZXQgbXNnVmFsID0gZ2V0QWxsQnlQbGFjZWhvbGRlclRleHQoJ01lc3NhZ2UuLi4nKVxuXG5cdFx0XHRcdGV4cGVjdChuYW1lVmFsLnZhbHVlKS50b0VxdWFsKHVuZGVmaW5lZClcblx0XHRcdFx0ZXhwZWN0KGVtYWlsVmFsLnZhbHVlKS50b0VxdWFsKHVuZGVmaW5lZClcblx0XHRcdFx0ZXhwZWN0KG1zZ1ZhbC52YWx1ZSkudG9FcXVhbCh1bmRlZmluZWQpXG5cblx0XHRcdFx0bmFtZVZhbC52YWx1ZSA9IHByb3BzLm5hbWVcblx0XHRcdFx0ZW1haWxWYWwudmFsdWUgPSBwcm9wcy5lbWFpbFxuXHRcdFx0XHRtc2dWYWwudmFsdWUgPSBwcm9wcy5tZXNzYWdlXG5cblx0XHRcdFx0ZXhwZWN0KG5hbWVWYWwudmFsdWUpLnRvTWF0Y2goJ0d1eScpXG5cdFx0XHRcdGV4cGVjdChlbWFpbFZhbC52YWx1ZSkudG9NYXRjaCgnR3V5VGhlR3JlYXRAZ21haWwuY29tJylcblx0XHRcdFx0ZXhwZWN0KGVtYWlsVmFsLnZhbHVlKS50b01hdGNoKC9eKChbXjw+KClbXFxdXFxcXC4sOzpcXHNAXCJdKyhcXC5bXjw+KClbXFxdXFxcXC4sOzpcXHNAXCJdKykqKXwoXCIuK1wiKSlAKChcXFtbMC05XXsxLDN9XFwuWzAtOV17MSwzfVxcLlswLTldezEsM31cXC5bMC05XXsxLDN9XSl8KChbYS16QS1aXFwtMC05XStcXC4pK1thLXpBLVpdezIsfSkpJC8pXG5cdFx0XHRcdGV4cGVjdChtc2dWYWwudmFsdWUpLnRvTWF0Y2goJ3RoaXMgaXMgdGhlIG1lc3NhZ2UnKVxuXG5cdFx0XHRcdGxldCBidXR0b24gPSBnZXRCeVRleHQoJ1NlbmQnKVxuXG5cdFx0XHRcdGNvbnNvbGUubG9nKGZpcmVFdmVudC5jbGljayhidXR0b24pKVxuXG59KVx0XHQiXX0=