2569cf9d92ebc42a69dda5f7952af67f
"use strict";

var _interopRequireDefault = require("/home/tgc/Desktop/newSite/-/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

var _Contact = _interopRequireDefault(require("../Contact"));

var _Form = _interopRequireDefault(require("../Form"));

var _react2 = require("@testing-library/react");

var _redux = require("redux");

var _reduxThunk = _interopRequireDefault(require("redux-thunk"));

var _reducers = require("../../../redux/reducers");

var _reactRedux = require("react-redux");

var _jsxFileName = "/home/tgc/Desktop/newSite/-/src/comps/home/testing/contact.test.js";
const store = (0, _redux.createStore)(_reducers.reducer, (0, _redux.applyMiddleware)(_reduxThunk.default));
test('Button that toggles form renders without crashing', async () => {
  const container = document.createElement('div');

  _reactDom.default.render( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {
    store: store,
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 19,
      columnNumber: 19
    }
  }, /*#__PURE__*/_react.default.createElement(_Contact.default, {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 19,
      columnNumber: 43
    }
  })), container); //Contact Button
  //container.childNodes[0].childNodes[1]


  const contactBtn = (0, _react2.findByText)('Contact Me');
  const btnText = (0, _react2.getNodeText)(container);
  expect(container).toBeTruthy(); //the container holding component rendered

  expect(container.innerHTML).toMatchSnapshot();
  expect(container.innerHTML.includes('<button')).toBeTruthy(); //the container has the toggle button

  expect(contactBtn).toBeTruthy(); //the toggle button rendered correctly

  expect(contactBtn).toMatchSnapshot();
  console.log(btnText);
  expect(container.innerHTML.includes('<form')).toBeFalsy(); //the container has the form hidden 
});
test('Form renders with out crashing', async () => {
  const container = document.createElement('div');

  _reactDom.default.render( /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {
    store: store,
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 42,
      columnNumber: 19
    }
  }, /*#__PURE__*/_react.default.createElement(_Form.default, {
    __self: void 0,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 42,
      columnNumber: 43
    }
  })), container);

  let form_ = (0, _react2.findByLabelText)('name');
  console.log('container========::>', container.innerHTML);
  console.log('form========::>', form_.then(res => res));
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRhY3QudGVzdC5qcyJdLCJuYW1lcyI6WyJzdG9yZSIsInJlZHVjZXIiLCJ0aHVuayIsInRlc3QiLCJjb250YWluZXIiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJSZWFjdERPTSIsInJlbmRlciIsImNvbnRhY3RCdG4iLCJidG5UZXh0IiwiZXhwZWN0IiwidG9CZVRydXRoeSIsImlubmVySFRNTCIsInRvTWF0Y2hTbmFwc2hvdCIsImluY2x1ZGVzIiwiY29uc29sZSIsImxvZyIsInRvQmVGYWxzeSIsImZvcm1fIiwidGhlbiIsInJlcyJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUdBOztBQUNBOztBQUNBOztBQUNBOzs7QUFHQSxNQUFNQSxLQUFLLEdBQUcsd0JBQVlDLGlCQUFaLEVBQW9CLDRCQUFnQkMsbUJBQWhCLENBQXBCLENBQWQ7QUFHQUMsSUFBSSxDQUFDLG1EQUFELEVBQXNELFlBQVU7QUFDbkUsUUFBTUMsU0FBUyxHQUFHQyxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsS0FBdkIsQ0FBbEI7O0FBQ0NDLG9CQUFTQyxNQUFULGVBQWdCLDZCQUFDLG9CQUFEO0FBQVUsSUFBQSxLQUFLLEVBQUVSLEtBQWpCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsa0JBQXdCLDZCQUFDLGdCQUFEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsSUFBeEIsQ0FBaEIsRUFBa0VJLFNBQWxFLEVBRmtFLENBR2pFO0FBQ0E7OztBQUNBLFFBQU1LLFVBQVUsR0FBRyx3QkFBVyxZQUFYLENBQW5CO0FBQ0EsUUFBTUMsT0FBTyxHQUFHLHlCQUFZTixTQUFaLENBQWhCO0FBQ0RPLEVBQUFBLE1BQU0sQ0FBQ1AsU0FBRCxDQUFOLENBQWtCUSxVQUFsQixHQVBrRSxDQU9wQzs7QUFDOUJELEVBQUFBLE1BQU0sQ0FBQ1AsU0FBUyxDQUFDUyxTQUFYLENBQU4sQ0FBNEJDLGVBQTVCO0FBRURILEVBQUFBLE1BQU0sQ0FBQ1AsU0FBUyxDQUFDUyxTQUFWLENBQW9CRSxRQUFwQixDQUE2QixTQUE3QixDQUFELENBQU4sQ0FBZ0RILFVBQWhELEdBVm1FLENBVVA7O0FBRTNERCxFQUFBQSxNQUFNLENBQUNGLFVBQUQsQ0FBTixDQUFtQkcsVUFBbkIsR0Faa0UsQ0FZbkM7O0FBQy9CRCxFQUFBQSxNQUFNLENBQUNGLFVBQUQsQ0FBTixDQUFtQkssZUFBbkI7QUFFRkUsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlQLE9BQVo7QUFFQ0MsRUFBQUEsTUFBTSxDQUFDUCxTQUFTLENBQUNTLFNBQVYsQ0FBb0JFLFFBQXBCLENBQTZCLE9BQTdCLENBQUQsQ0FBTixDQUE4Q0csU0FBOUMsR0FqQm1FLENBaUJWO0FBR3pELENBcEJHLENBQUo7QUF1QkFmLElBQUksQ0FBQyxnQ0FBRCxFQUFtQyxZQUFVO0FBQ2hELFFBQU1DLFNBQVMsR0FBR0MsUUFBUSxDQUFDQyxhQUFULENBQXVCLEtBQXZCLENBQWxCOztBQUNDQyxvQkFBU0MsTUFBVCxlQUFnQiw2QkFBQyxvQkFBRDtBQUFVLElBQUEsS0FBSyxFQUFFUixLQUFqQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLGtCQUF3Qiw2QkFBQyxhQUFEO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsSUFBeEIsQ0FBaEIsRUFBNERJLFNBQTVEOztBQUNFLE1BQUllLEtBQUssR0FBRyw2QkFBZ0IsTUFBaEIsQ0FBWjtBQUNESCxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxzQkFBWixFQUFtQ2IsU0FBUyxDQUFDUyxTQUE3QztBQUNBRyxFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxpQkFBWixFQUE4QkUsS0FBSyxDQUFDQyxJQUFOLENBQVdDLEdBQUcsSUFBRUEsR0FBaEIsQ0FBOUI7QUFDRixDQU5HLENBQUoiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgUmVhY3RET00gZnJvbSAncmVhY3QtZG9tJ1xuaW1wb3J0IENvbnRhY3RCdG4gZnJvbSAnLi4vQ29udGFjdCdcbmltcG9ydCBGb3JtIGZyb20gJy4uL0Zvcm0nXG5pbXBvcnQgeyByZW5kZXIsIGZpcmVFdmVudCwgd2FpdEZvciwgXG5cdHNjcmVlbixmaW5kQnlUZXh0LGdldE5vZGVUZXh0LGNyZWF0ZUV2ZW50LGZpbmRCeUxhYmVsVGV4dCB9IGZyb20gJ0B0ZXN0aW5nLWxpYnJhcnkvcmVhY3QnXG5cbmltcG9ydCB7Y3JlYXRlU3RvcmUsYXBwbHlNaWRkbGV3YXJlfSBmcm9tICdyZWR1eCdcbmltcG9ydCB0aHVuayBmcm9tICdyZWR1eC10aHVuaydcbmltcG9ydCB7cmVkdWNlcn0gZnJvbSAnLi4vLi4vLi4vcmVkdXgvcmVkdWNlcnMnXG5pbXBvcnQge1Byb3ZpZGVyfSBmcm9tICdyZWFjdC1yZWR1eCdcblxuXG5jb25zdCBzdG9yZSA9IGNyZWF0ZVN0b3JlKHJlZHVjZXIsYXBwbHlNaWRkbGV3YXJlKHRodW5rKSlcblxuXG50ZXN0KCdCdXR0b24gdGhhdCB0b2dnbGVzIGZvcm0gcmVuZGVycyB3aXRob3V0IGNyYXNoaW5nJywgYXN5bmMgKCk9Pntcblx0Y29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jylcblx0XHRSZWFjdERPTS5yZW5kZXIoPFByb3ZpZGVyIHN0b3JlPXtzdG9yZX0+PENvbnRhY3RCdG4gLz48L1Byb3ZpZGVyPixjb250YWluZXIpXG5cdFx0XHQvL0NvbnRhY3QgQnV0dG9uXG5cdFx0XHQvL2NvbnRhaW5lci5jaGlsZE5vZGVzWzBdLmNoaWxkTm9kZXNbMV1cblx0XHRcdGNvbnN0IGNvbnRhY3RCdG4gPSBmaW5kQnlUZXh0KCdDb250YWN0IE1lJylcblx0XHRcdGNvbnN0IGJ0blRleHQgPSBnZXROb2RlVGV4dChjb250YWluZXIpXG5cdFx0ZXhwZWN0KGNvbnRhaW5lcikudG9CZVRydXRoeSgpLy90aGUgY29udGFpbmVyIGhvbGRpbmcgY29tcG9uZW50IHJlbmRlcmVkXG5cdFx0ZXhwZWN0KGNvbnRhaW5lci5pbm5lckhUTUwpLnRvTWF0Y2hTbmFwc2hvdCgpXG5cblx0ZXhwZWN0KGNvbnRhaW5lci5pbm5lckhUTUwuaW5jbHVkZXMoJzxidXR0b24nKSkudG9CZVRydXRoeSgpLy90aGUgY29udGFpbmVyIGhhcyB0aGUgdG9nZ2xlIGJ1dHRvblxuXG5cdFx0ZXhwZWN0KGNvbnRhY3RCdG4pLnRvQmVUcnV0aHkoKS8vdGhlIHRvZ2dsZSBidXR0b24gcmVuZGVyZWQgY29ycmVjdGx5XG5cdFx0ZXhwZWN0KGNvbnRhY3RCdG4pLnRvTWF0Y2hTbmFwc2hvdCgpXG5cbmNvbnNvbGUubG9nKGJ0blRleHQpXG5cblx0ZXhwZWN0KGNvbnRhaW5lci5pbm5lckhUTUwuaW5jbHVkZXMoJzxmb3JtJykpLnRvQmVGYWxzeSgpLy90aGUgY29udGFpbmVyIGhhcyB0aGUgZm9ybSBoaWRkZW4gXG5cblxufSlcblxuXG50ZXN0KCdGb3JtIHJlbmRlcnMgd2l0aCBvdXQgY3Jhc2hpbmcnLCBhc3luYyAoKT0+e1xuXHRjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuXHRcdFJlYWN0RE9NLnJlbmRlcig8UHJvdmlkZXIgc3RvcmU9e3N0b3JlfT48Rm9ybSAvPjwvUHJvdmlkZXI+LGNvbnRhaW5lcilcblx0XHRcdFx0bGV0IGZvcm1fID0gZmluZEJ5TGFiZWxUZXh0KCduYW1lJylcblx0XHRcdGNvbnNvbGUubG9nKCdjb250YWluZXI9PT09PT09PTo6PicsY29udGFpbmVyLmlubmVySFRNTClcblx0XHRcdGNvbnNvbGUubG9nKCdmb3JtPT09PT09PT06Oj4nLGZvcm1fLnRoZW4ocmVzPT5yZXMpXHQpXHRcbn0pXHRcdCJdfQ==