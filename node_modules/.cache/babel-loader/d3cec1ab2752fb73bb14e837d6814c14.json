{"ast":null,"code":"var _jsxFileName = \"/home/tgc/Desktop/Portfolio/copyFE/-/src/comps/home/Contact.js\";\n\n/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\nimport React from 'react';\nimport { conBtn, conLink, formToats, pulse, middle, formToatsHeader, formBoxh } from '../../util/contactStyles';\nimport { Button, Toast, ToastBody, ToastHeader, Modal, FormText, FormGroup, Card } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { changeBtnLabel, showOrNot } from '../../redux/actions';\nimport Form from './Form';\nimport { inputVise, Pass, Err } from '../../util/contactStyles';\nimport { name_, email_, msg_ } from '../../util/contactValidations';\nimport './form.css';\nimport axios from 'axios';\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      calling: '',\n      modal: true,\n      valOrNah1: '',\n      valOrNah2: '',\n      valOrNah3: '',\n      msg: {\n        name: '',\n        email: '',\n        message: ''\n      },\n      errMsg: '',\n      passMsg: ''\n    };\n    this.toggle = this.toggle.bind(this);\n    this.send = this.send.bind(this);\n    this.toInbox = this.toInbox.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  send() {\n    return new Promise((good, bad) => {\n      if (name_(this.state.msg.name) && email_(this.state.msg.email) && msg_(this.state.msg.message)) {\n        this.setState({\n          //check name\n          passMsg: `Thank You ${this.state.name} Your Message Was Sent.`,\n          errMsg: \"\",\n          valOrNah1: \"is-valid\",\n          valOrNah2: \"is-valid\",\n          valOrNah3: \"is-valid\"\n        });\n        return good(true);\n      } else {\n        this.setState({\n          valOrNah1: \"is-invalid\",\n          valOrNah2: \"is-invalid\",\n          valOrNah3: \"is-invalid\",\n          errMsg: \"We Cant Send This, please check for errors\",\n          passMsg: \"\"\n        });\n        return bad(false);\n      }\n    });\n  }\n\n  async toInbox() {\n    return this.send().then(good => {\n      return axios.post(process.env.REACT_APP_sendmail, this.state.msg).then(res => {//reset entire form and state\n      }).catch(err => {\n        this.setState({\n          errMsg: \"server overwhelmed please wait or try again\",\n          passMsg: \"\"\n        });\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.props.show ? this.props.changeBtnLabel('Hide..') : this.props.changeBtnLabel('Contact Me');\n  }\n\n  componentDidUpdate() {\n    this.props.show ? this.props.changeBtnLabel('Hide..') : this.props.changeBtnLabel('Contact Me');\n  }\n\n  toggle() {\n    this.setState({\n      modal: !this.state.modal\n    });\n    this.props.showOrNot(this.props.show);\n    this.props.show ? this.props.changeBtnLabel('Hide..') : this.props.changeBtnLabel('Contact Me');\n  }\n\n  componentWillUnmount() {\n    return true;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: middle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 2\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      style: conBtn,\n      onClick: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 52\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: conLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 58\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-envelope\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 78\n      }\n    }), \" \", this.props.buttonLabel, \" \", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-envelope\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 139\n      }\n    })))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Toast, {\n      isOpen: this.props.show,\n      style: formToats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ToastBody, {\n      style: formBoxh,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return { ...state\n  };\n};\n\nexport default connect(mapStateToProps, {\n  changeBtnLabel,\n  showOrNot\n})(Contact); // <div style={middle} >\n//    <br />\n//    <Button style={conBtn} onClick={this.toggle}><span><h1 style={conLink}><i className=\"fas fa-envelope\"></i> {this.props.buttonLabel} <i className=\"fas fa-envelope\"></i></h1></span></Button>\n//    <br />\n//    <Toast isOpen={this.props.show} style={{...formToats,marginTop:'100px'}}>\n//       {/*FORM*/}\n//       <Form toggle={()=>{return this.toggle()}}/>\n//      {/*FORM*/}\n//    </Toast>\n//  </div>","map":{"version":3,"sources":["/home/tgc/Desktop/Portfolio/copyFE/-/src/comps/home/Contact.js"],"names":["React","conBtn","conLink","formToats","pulse","middle","formToatsHeader","formBoxh","Button","Toast","ToastBody","ToastHeader","Modal","FormText","FormGroup","Card","connect","changeBtnLabel","showOrNot","Form","inputVise","Pass","Err","name_","email_","msg_","axios","Contact","Component","constructor","props","state","calling","modal","valOrNah1","valOrNah2","valOrNah3","msg","name","email","message","errMsg","passMsg","toggle","bind","send","toInbox","Promise","good","bad","setState","then","post","process","env","REACT_APP_sendmail","res","catch","err","componentDidMount","show","componentDidUpdate","componentWillUnmount","render","buttonLabel","mapStateToProps"],"mappings":"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","sourcesContent":["/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\nimport React  from 'react';\nimport { conBtn,conLink,formToats, pulse,middle,formToatsHeader,formBoxh} from '../../util/contactStyles'\nimport { Button ,Toast, ToastBody, ToastHeader, Modal,FormText,FormGroup,Card } from 'reactstrap';\nimport {connect} from 'react-redux'\nimport {changeBtnLabel,showOrNot} from '../../redux/actions'\nimport Form from './Form'\nimport {inputVise,Pass,Err} from '../../util/contactStyles'\nimport {name_,email_,msg_} from '../../util/contactValidations'\nimport './form.css'\n\nimport axios from 'axios'\n\n\nclass Contact extends React.Component {\n constructor(props){\n  super(props)\n  this.state={\n    calling:'',\n    modal:true,\n   valOrNah1:'',valOrNah2:'',valOrNah3:'',\nmsg:{name:'',email:'',message:''},\nerrMsg:'',passMsg:''\n  }\n \n  this.toggle = this.toggle.bind(this)\nthis.send = this.send.bind(this)\nthis.toInbox = this.toInbox.bind(this)\nthis.toggle = this.toggle.bind(this)\n\n\n}\n\n\n\n\n\n send(){\n\n  return new Promise((good,bad)=>{\n\n\n    if(name_(this.state.msg.name) && email_(this.state.msg.email) && msg_(this.state.msg.message)){\n      this.setState({//check name\npassMsg:`Thank You ${this.state.name} Your Message Was Sent.`,\nerrMsg:\"\",\nvalOrNah1:\"is-valid\",\nvalOrNah2:\"is-valid\",\nvalOrNah3:\"is-valid\",\n})\n\n\n      return good(true)\n    }else{\n        this.setState({valOrNah1:\"is-invalid\",\nvalOrNah2:\"is-invalid\",\nvalOrNah3:\"is-invalid\",errMsg:\"We Cant Send This, please check for errors\",passMsg:\"\"})\n    return bad(false)\n  \n\n    }\n    \n\n  \n  })\n\n\n}\n\n\n\nasync toInbox(){\n\n\n\n\n        return this.send().then(good=>{\n\nreturn axios.post(process.env.REACT_APP_sendmail\n,this.state.msg)\n.then(res=>{\n\n//reset entire form and state\n\n\n}).catch(err=>{this.setState({errMsg:\"server overwhelmed please wait or try again\",passMsg:\"\"})})\n\n\n})\n  }\n\ncomponentDidMount(){\n    this.props.show?this.props.changeBtnLabel('Hide..'):this.props.changeBtnLabel('Contact Me');\n    \n }\n\n componentDidUpdate(){\n    this.props.show?this.props.changeBtnLabel('Hide..'):this.props.changeBtnLabel('Contact Me');\n\n    \n }\n\n  toggle(){\n    this.setState({\n      modal:!this.state.modal\n    })\n  this.props.showOrNot(this.props.show)\n   this.props.show?this.props.changeBtnLabel('Hide..'):this.props.changeBtnLabel('Contact Me');\n}\n  \n\n\n  componentWillUnmount(){\n    return true  \n}\n\n\nrender(){\n\nreturn (\n <div style={middle}>\n      <br />\n      <Button style={conBtn} onClick={this.toggle}><span><h1 style={conLink}><i className=\"fas fa-envelope\"></i> {this.props.buttonLabel} <i className=\"fas fa-envelope\"></i></h1></span></Button>\n      <br />\n\n      <Toast isOpen={this.props.show} style={formToats}>\n     \n      <ToastBody style={formBoxh}>\n         {/*FORM*/}\n          <Form />\n        {/*FORM*/}\n        </ToastBody>\n      </Toast>\n    </div>\n\n  \n\n  );\n\n\n}\n  \n}\n\nconst mapStateToProps = state =>{\nreturn {\n...state\n}\n}\n\nexport default connect(\nmapStateToProps,\n{changeBtnLabel,showOrNot}\n)(Contact)\n\n\n\n\n   // <div style={middle} >\n   //    <br />\n   //    <Button style={conBtn} onClick={this.toggle}><span><h1 style={conLink}><i className=\"fas fa-envelope\"></i> {this.props.buttonLabel} <i className=\"fas fa-envelope\"></i></h1></span></Button>\n   //    <br />\n\n   //    <Toast isOpen={this.props.show} style={{...formToats,marginTop:'100px'}}>\n     \n   //       {/*FORM*/}\n   //       <Form toggle={()=>{return this.toggle()}}/>\n   //      {/*FORM*/}\n   //    </Toast>\n   //  </div>\n\n\n"]},"metadata":{},"sourceType":"module"}