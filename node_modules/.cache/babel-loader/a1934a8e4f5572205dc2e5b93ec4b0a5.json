{"ast":null,"code":"var _jsxFileName = \"/home/guy/Desktop/site/other/-/src/comps/home/Contact.js\";\n\n/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\nimport axios from 'axios';\nimport React from 'react';\nimport { Form, Toast, ToastBody, ToastHeader, FormGroup, Input, Label, Button, Spinner, FormFeedback, FormText } from 'reactstrap';\nimport { Err, Pass, pulse, conBtn, conLink, middle, formBoxh, formio } from '../../util/contactStyles';\n\nclass Contact extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      valOrNah1: '',\n      valOrNah2: '',\n      valOrNah3: '',\n      show: true,\n      msg: {\n        name: '',\n        email: '',\n        message: ''\n      },\n      errMsg: '',\n      passMsg: ''\n    };\n    this.toggle = this.toggle.bind(this);\n    this.send = this.send.bind(this);\n  }\n\n  toggle() {\n    this.setState({\n      show: !this.state.show\n    });\n  }\n\n  send(e) {\n    e.preventDefault(); //https://thisguycodez.herokuapp.com/api/mailer\n\n    if (!this.state.msg.name.match(/[A-z]/i) || !this.state.msg.email.match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/) || !this.state.msg.message.match(/[A-z]/i)) {\n      this.setState({\n        errMsg: \"We Cant Send This, please check for errors\",\n        valOrNah1: \"is-invalid\",\n        valOrNah2: \"is-invalid\",\n        valOrNah3: \"is-invalid\",\n        passMsg: \"\"\n      });\n      return false;\n    } else {\n      axios.post('https://thisguycodez.herokuapp.com/api/admin/inbox', this.state.msg).then(res => {\n        this.setState({\n          passMsg: `Thank You ${this.state.name} Your Message Was Sent.`,\n          valOrNah1: \"is-valid\",\n          valOrNah2: \"is-valid\",\n          valOrNah3: \"is-valid\",\n          errMsg: \"\"\n        });\n        setTimeout(() => {\n          this.toggle();\n          this.setState({\n            passMsg: \"\",\n            errMsg: \"\"\n          });\n        }, 2000);\n      }).catch(err => {\n        this.setState({\n          errMsg: \"server overwhelmed please wait or try again\",\n          passMsg: \"\"\n        });\n      });\n      e.target.reset();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: middle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      style: conBtn,\n      onClick: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: conLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 52\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-envelope\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 74\n      }\n    }), \" \", this.props.buttonLabel, \" \", /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-envelope\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 135\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Toast, {\n      isOpen: this.state.show,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ToastHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: pulse,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      type: \"grow\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"tel:2402737952\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-phone phone_\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 39\n      }\n    }), \" Call Instead? \")))), /*#__PURE__*/React.createElement(ToastBody, {\n      style: formBoxh,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      style: formio,\n      onSubmit: this.send,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"name\",\n      style: {\n        WebkitTextFillColor: '#fff',\n        fontWeight: 'bolderd'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, \"Name:\"), /*#__PURE__*/React.createElement(Input, {\n      className: this.state.valOrNah1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FormFeedback, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, \"You will not be able to see this\"), /*#__PURE__*/React.createElement(FormText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, \"What name can I refer to you as.\")), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"exampleEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }\n    }, \"Valid input\"), /*#__PURE__*/React.createElement(Input, {\n      className: this.state.valOrNah2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FormFeedback, {\n      valid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, \"Sweet! that name is available\"), /*#__PURE__*/React.createElement(FormText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, \"You will not recieve any spam or emails period.\")), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"examplePassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, \"Invalid input\"), /*#__PURE__*/React.createElement(Input, {\n      className: this.state.valOrNah3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FormText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Err, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 19\n      }\n    }, this.state.errMsg), /*#__PURE__*/React.createElement(Pass, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, this.state.passMsg))), /*#__PURE__*/React.createElement(Button, {\n      style: conBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    }, \"Send\")))));\n  }\n\n}\n\nexport default Contact; //   <Form style={formio} >\n//  <FormGroup>\n//   <Label htmlFor=\"name\" style={{WebkitTextFillColor:'#fff',fontWeight:'bolderd'}}>Name:</Label>\n//   <Input type=\"text\" name=\"name\" id=\"name\" value={this.state.msg.name} onChange={(e)=>{this.setState({msg:{...this.state.msg,name:e.target.value}})}} placeholder=\"Name...\"  style={{WebkitTextFillColor:'#000'}} required/>\n// </FormGroup>\n//  <FormGroup>\n//   <Label htmlFor=\"email\" style={{WebkitTextFillColor:'#fff',fontWeight:'bolderd'}}>Email:</Label>\n//   <Input type=\"email\" name=\"email\" id=\"email\" value={this.state.msg.email} onChange={(e)=>{this.setState({msg:{...this.state.msg,email:e.target.value}})}} placeholder=\"Email...\"  style={{WebkitTextFillColor:'#000'}} required/>\n// </FormGroup>\n//  <FormGroup>\n//   <Label htmlFor=\"message:\" style={{WebkitTextFillColor:'#fff',fontWeight:'bolderd'}}>Message</Label>\n//   <Input type=\"textarea\" name=\"message\" id=\"message\" value={this.state.msg.message} onChange={(e)=>{this.setState({msg:{...this.state.msg,message:e.target.value}})}} placeholder=\"Message...\"  style={{WebkitTextFillColor:'#000'}} required/>\n// </FormGroup>\n// <Button style={conBtn}>Send</Button>\n//   </Form>","map":{"version":3,"sources":["/home/guy/Desktop/site/other/-/src/comps/home/Contact.js"],"names":["axios","React","Form","Toast","ToastBody","ToastHeader","FormGroup","Input","Label","Button","Spinner","FormFeedback","FormText","Err","Pass","pulse","conBtn","conLink","middle","formBoxh","formio","Contact","Component","constructor","props","state","valOrNah1","valOrNah2","valOrNah3","show","msg","name","email","message","errMsg","passMsg","toggle","bind","send","setState","e","preventDefault","match","post","then","res","setTimeout","catch","err","target","reset","render","buttonLabel","WebkitTextFillColor","fontWeight"],"mappings":"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","sourcesContent":["/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\nimport axios from 'axios'\nimport React  from 'react';\nimport {Form,Toast, ToastBody, ToastHeader,FormGroup,Input,Label, Button,Spinner ,FormFeedback, FormText \n} from 'reactstrap';\n\nimport {\n  Err,\n  Pass,\n  pulse,\n  conBtn, \n  conLink,\n  middle,\n  formBoxh,\n  formio\n} from '../../util/contactStyles'\n\n\n\nclass Contact extends React.Component {\n constructor(props){\n  super(props)\n  this.state={\n    valOrNah1:'',\n    valOrNah2:'',\n    valOrNah3:'',\n    show:true,\n    msg:{\n      name:'',\n      email:'',\n      message:''\n    },\n    errMsg:'',\n    passMsg:''\n  }\n\n  this.toggle = this.toggle.bind(this)\n  this.send = this.send.bind(this)\n }\n\n toggle(){\n  this.setState({\n    show:!this.state.show\n  })\n }\n\n send(e){\n    e.preventDefault()\n    //https://thisguycodez.herokuapp.com/api/mailer\n    if(\n      !this.state.msg.name.match(/[A-z]/i) ||\n      !this.state.msg.email.match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/) ||  \n      !this.state.msg.message.match(/[A-z]/i) \n\n      ){\n\n      this.setState({\n        errMsg:\"We Cant Send This, please check for errors\",\n        valOrNah1:\"is-invalid\",\n        valOrNah2:\"is-invalid\",\n        valOrNah3:\"is-invalid\",\n        passMsg:\"\"\n      })\n\n      return false\n    }else{\n       axios.post('https://thisguycodez.herokuapp.com/api/admin/inbox'\n      ,this.state.msg)\n    .then(res=>{\n        this.setState({\n        passMsg:`Thank You ${this.state.name} Your Message Was Sent.`,\n        valOrNah1:\"is-valid\",\n        valOrNah2:\"is-valid\",\n        valOrNah3:\"is-valid\",\n        errMsg:\"\"\n      })\n\n     setTimeout(()=>{\n    this.toggle()\n     this.setState({passMsg:\"\",errMsg:\"\"})\n   },2000)\n\n    }).catch(err=>{\n      this.setState({\n        errMsg:\"server overwhelmed please wait or try again\",\n        passMsg:\"\"\n      })\n  })\n      e.target.reset()\n  }\n}\n\nrender(){\n\nreturn (\n\n\n   <div style={middle}>\n      <br />\n      <Button style={conBtn} onClick={this.toggle}><span style={conLink}><i className=\"fas fa-envelope\"></i> {this.props.buttonLabel} <i className=\"fas fa-envelope\"></i></span></Button>\n      <br />\n\n      <Toast isOpen={this.state.show}>\n      <ToastHeader>\n        <span style={pulse}>\n     <Spinner type=\"grow\" color=\"primary\" />\n      <small><a href='tel:2402737952'><i className=\"fas fa-phone phone_\"></i> Call Instead? </a></small>\n      </span>\n      \n      </ToastHeader>\n      <ToastBody style={formBoxh}>\n         {/*FORM*/}\n\n\n          <Form style={formio}  onSubmit={this.send}>\n     <FormGroup>\n        <Label htmlFor=\"name\" style={{WebkitTextFillColor:'#fff',fontWeight:'bolderd'}}>Name:</Label>\n        <Input className={this.state.valOrNah1} />\n        <FormFeedback>You will not be able to see this</FormFeedback>\n        <FormText>What name can I refer to you as.</FormText>\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"exampleEmail\">Valid input</Label>\n        <Input className={this.state.valOrNah2}  />\n        <FormFeedback valid>Sweet! that name is available</FormFeedback>\n        <FormText>You will not recieve any spam or emails period.</FormText>\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"examplePassword\">Invalid input</Label>\n        <Input className={this.state.valOrNah3} />\n        <FormText><Err>{this.state.errMsg}</Err>\n        <Pass>{this.state.passMsg}</Pass></FormText>\n      </FormGroup>\n      <Button style={conBtn}>Send</Button>\n    </Form>\n\n        {/*FORM*/}\n        </ToastBody>\n      </Toast>\n    </div>\n  );\n\n\n}\n  \n}\n\nexport default Contact;\n\n\n\n\n\n    \n      //   <Form style={formio} >\n      //  <FormGroup>\n      //   <Label htmlFor=\"name\" style={{WebkitTextFillColor:'#fff',fontWeight:'bolderd'}}>Name:</Label>\n      //   <Input type=\"text\" name=\"name\" id=\"name\" value={this.state.msg.name} onChange={(e)=>{this.setState({msg:{...this.state.msg,name:e.target.value}})}} placeholder=\"Name...\"  style={{WebkitTextFillColor:'#000'}} required/>\n      // </FormGroup>\n      //  <FormGroup>\n      //   <Label htmlFor=\"email\" style={{WebkitTextFillColor:'#fff',fontWeight:'bolderd'}}>Email:</Label>\n      //   <Input type=\"email\" name=\"email\" id=\"email\" value={this.state.msg.email} onChange={(e)=>{this.setState({msg:{...this.state.msg,email:e.target.value}})}} placeholder=\"Email...\"  style={{WebkitTextFillColor:'#000'}} required/>\n      // </FormGroup>\n      //  <FormGroup>\n      //   <Label htmlFor=\"message:\" style={{WebkitTextFillColor:'#fff',fontWeight:'bolderd'}}>Message</Label>\n      //   <Input type=\"textarea\" name=\"message\" id=\"message\" value={this.state.msg.message} onChange={(e)=>{this.setState({msg:{...this.state.msg,message:e.target.value}})}} placeholder=\"Message...\"  style={{WebkitTextFillColor:'#000'}} required/>\n      // </FormGroup>\n      // <Button style={conBtn}>Send</Button>\n      //   </Form>"]},"metadata":{},"sourceType":"module"}