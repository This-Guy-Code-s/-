{"ast":null,"code":"export const name_ = theName => {\n  if (theName.match(/[A-z]/i)) {\n    return true;\n  } else {\n    return false;\n  }\n};\nexport const email_ = theEmail => {\n  if (theEmail.match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)) {\n    return true;\n  } else {\n    return false;\n  }\n};\nexport const msg_ = theMsg => {\n  const check = parseInt(theMsg) + 3;\n\n  if (theMsg.match(/[A-z]/i)) {\n    console.log('msg ', theMsg);\n    console.log('check ', check);\n    return true;\n  } else if (/[0-9]/.test(check)) {\n    console.log('msg in if', theMsg);\n    console.log('check in if', check);\n    return false;\n  } else {\n    return false;\n  }\n};","map":{"version":3,"sources":["/home/tgc/Desktop/newSite/-/src/util/contactValidations.js"],"names":["name_","theName","match","email_","theEmail","msg_","theMsg","check","parseInt","console","log","test"],"mappings":"AAIA,OAAO,MAAMA,KAAK,GAAIC,OAAD,IAAY;AAC9B,MAAGA,OAAO,CAACC,KAAR,CAAc,QAAd,CAAH,EAA2B;AAC1B,WAAO,IAAP;AACA,GAFD,MAEK;AACJ,WAAO,KAAP;AACA;AACH,CANM;AAUP,OAAO,MAAMC,MAAM,GAAIC,QAAD,IAAa;AAChC,MAAGA,QAAQ,CAACF,KAAT,CAAe,sJAAf,CAAH,EAA0K;AACzK,WAAO,IAAP;AACA,GAFD,MAEK;AACJ,WAAO,KAAP;AACA;AACH,CANM;AASP,OAAO,MAAMG,IAAI,GAAIC,MAAD,IAAW;AAC3B,QAAMC,KAAK,GAAGC,QAAQ,CAACF,MAAD,CAAR,GAAmB,CAAjC;;AAEF,MAAGA,MAAM,CAACJ,KAAP,CAAa,QAAb,CAAH,EAA0B;AACzBO,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,MAApB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,KAAtB;AACA,WAAO,IAAP;AAEA,GALD,MAKM,IAAG,QAAQI,IAAR,CAAaJ,KAAb,CAAH,EAAuB;AACzBE,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,MAAzB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,KAA3B;AACF,WAAO,KAAP;AACA,GAJI,MAIA;AACJ,WAAO,KAAP;AACA;AACH,CAfM","sourcesContent":["\n\n\n\nexport const name_ = (theName) =>{\n\t\t\tif(theName.match(/[A-z]/i)){\n\t\t\t\treturn true\n\t\t\t}else{\n\t\t\t\treturn false\n\t\t\t}\n}\n\n\n\nexport const email_ = (theEmail) =>{\n\t\t\tif(theEmail.match(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)){\n\t\t\t\treturn true\n\t\t\t}else{\n\t\t\t\treturn false\n\t\t\t}\n}\n\n\nexport const msg_ = (theMsg) =>{\n\t\t\t\tconst check = parseInt(theMsg) + 3\n\n\t\tif(theMsg.match(/[A-z]/i)){\n\t\t\tconsole.log('msg ', theMsg)\n\t\t\tconsole.log('check ', check)\n\t\t\treturn true\n\t\t\t\t\t\n\t\t}else if(/[0-9]/.test(check)){\n\t\t\t\t\t\tconsole.log('msg in if', theMsg)\n\t\t\t\t\t\tconsole.log('check in if', check)\n\t\t\t\treturn false\n\t\t\t}else{\n\t\t\t\treturn false\n\t\t\t}\n}"]},"metadata":{},"sourceType":"module"}