{"ast":null,"code":"var _jsxFileName = \"/home/tgc/Desktop/newSite/-/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducer } from './redux/reducers';\nimport { Provider } from 'react-redux';\nimport env from 'dotenv';\nenv.config();\nconst store = createStore(reducer, applyMiddleware(thunk));\nconst preloader = document && document.querySelector('.preloader');\nconst fadeEffect = setInterval(() => {\n  // if we don't set opacity 1 in CSS, then\n  // it will be equaled to \"\" -- that's why\n  // we check it, and if so, set opacity to 1\n  if (!preloader.style.opacity) {\n    preloader.style.opacity = 1;\n  }\n\n  if (preloader.style.opacity > 0) {\n    preloader.style.opacity -= 0.1;\n    console.log('done', preloader.style.opacity, preloader.style.zIndex);\n\n    if (preloader.style.opacity <= 0) {\n      preloader.style.zIndex = '-221';\n      ReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Router, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 2\n        }\n      }, /*#__PURE__*/React.createElement(App, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 3\n        }\n      }))), document.getElementById('root'));\n    }\n  } else {\n    clearInterval(fadeEffect);\n  }\n}, 100);","map":{"version":3,"sources":["/home/tgc/Desktop/newSite/-/src/index.js"],"names":["React","ReactDOM","App","BrowserRouter","Router","createStore","applyMiddleware","thunk","reducer","Provider","env","config","store","preloader","document","querySelector","fadeEffect","setInterval","style","opacity","console","log","zIndex","render","getElementById","clearInterval"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,aAAP;AACA,SAAQC,aAAa,IAAIC,MAAzB,QAAsC,kBAAtC;AACA,OAAO,sCAAP;AAEA,SAAQC,WAAR,EAAoBC,eAApB,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AAEA,OAAOC,GAAP,MAAgB,QAAhB;AACAA,GAAG,CAACC,MAAJ;AAEA,MAAMC,KAAK,GAAGP,WAAW,CAACG,OAAD,EAASF,eAAe,CAACC,KAAD,CAAxB,CAAzB;AAIA,MAAMM,SAAS,GAAGC,QAAQ,IAAIA,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAA9B;AAEA,MAAMC,UAAU,GAAGC,WAAW,CAAC,MAAM;AACnC;AACA;AACA;AACA,MAAI,CAACJ,SAAS,CAACK,KAAV,CAAgBC,OAArB,EAA8B;AAC5BN,IAAAA,SAAS,CAACK,KAAV,CAAgBC,OAAhB,GAA0B,CAA1B;AACD;;AACD,MAAIN,SAAS,CAACK,KAAV,CAAgBC,OAAhB,GAA0B,CAA9B,EAAiC;AAC/BN,IAAAA,SAAS,CAACK,KAAV,CAAgBC,OAAhB,IAA2B,GAA3B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBR,SAAS,CAACK,KAAV,CAAgBC,OAAnC,EAA2CN,SAAS,CAACK,KAAV,CAAgBI,MAA3D;;AACC,QAAGT,SAAS,CAACK,KAAV,CAAgBC,OAAhB,IAAyB,CAA5B,EAA8B;AAC7BN,MAAAA,SAAS,CAACK,KAAV,CAAgBI,MAAhB,GAAuB,MAAvB;AACArB,MAAAA,QAAQ,CAACsB,MAAT,eACA,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEX,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEL,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CAFK,CADA,EASJE,QAAQ,CAACU,cAAT,CAAwB,MAAxB,CATI;AAWA;AACH,GAjBD,MAiBO;AACLC,IAAAA,aAAa,CAACT,UAAD,CAAb;AACD;AACF,CA3B6B,EA2B3B,GA3B2B,CAA9B","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {createStore,applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\nimport {reducer} from './redux/reducers'\nimport {Provider} from 'react-redux'\n\nimport env from 'dotenv'\nenv.config()\n\nconst store = createStore(reducer,applyMiddleware(thunk))\n\n\n\nconst preloader = document && document.querySelector('.preloader');\n\nconst fadeEffect = setInterval(() => {\n  // if we don't set opacity 1 in CSS, then\n  // it will be equaled to \"\" -- that's why\n  // we check it, and if so, set opacity to 1\n  if (!preloader.style.opacity) {\n    preloader.style.opacity = 1;\n  }\n  if (preloader.style.opacity > 0) {\n    preloader.style.opacity -= 0.1;\n    console.log('done',preloader.style.opacity,preloader.style.zIndex)\n    \tif(preloader.style.opacity<=0){\n    \t\tpreloader.style.zIndex='-221'\n    \t\tReactDOM.render(\n      <Provider store={store}>\n\n\t<Router>\n  <App />\n</Router>\n      </Provider>\n\n  ,\n  document.getElementById('root')\n);\n    \t}\n  } else {\n    clearInterval(fadeEffect);\n  }\n}, 100);\n"]},"metadata":{},"sourceType":"module"}