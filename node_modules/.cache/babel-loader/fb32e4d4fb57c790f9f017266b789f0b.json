{"ast":null,"code":"var _jsxFileName = \"/home/tgc/Desktop/newSite/-/src/comps/home/Form.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Err, Pass, formBtn, formio } from '../../util/contactStyles';\nimport { Form, FormGroup, Input, Label, Button, FormText } from 'reactstrap';\nimport { name_, email_, msg_ } from '../../util/contactValidations';\nconst labe = {\n  WebkitTextFillColor: '#fff',\n  fontWeight: 'bolder'\n};\n\nclass Form_ extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      valOrNah1: '',\n      valOrNah2: '',\n      valOrNah3: '',\n      msg: {\n        name: '',\n        email: '',\n        message: ''\n      },\n      errMsg: '',\n      passMsg: ''\n    };\n    this.send = this.send.bind(this);\n  }\n\n  send(e) {\n    e.preventDefault();\n    !name_(this.state.msg.name) ? this.setState({\n      //check name\n      errMsg: \"We Cant Send This, please check for errors\",\n      valOrNah1: \"is-invalid\",\n      passMsg: \"\"\n    }) : this.setState({\n      valOrNah1: \"is-valid\"\n    });\n    !email_(this.state.msg.email) ? this.setState({\n      //check email\n      errMsg: \"We Cant Send This, please check for errors\",\n      valOrNah2: \"is-invalid\",\n      passMsg: \"\"\n    }) : this.setState({\n      valOrNah2: \"is-valid\"\n    });\n    !msg_(this.state.msg.message) ? this.setState({\n      //check msg\n      errMsg: \"We Cant Send This, please check for errors\",\n      valOrNah3: \"is-invalid\",\n      passMsg: \"\"\n    }) : this.setState({\n      valOrNah3: \"is-valid\"\n    });\n    setTimeout(() => {\n      //take a sec to let state settle then check vals\n      if (this.state.valOrNah1 === 'is-valid' && this.state.valOrNah2 === 'is-valid' && this.state.valOrNah3 === 'is-valid') {\n        axios.post(process.env.REACT_APP_sendmail, this.state.msg).then(res => {\n          this.setState({\n            passMsg: `Thank You ${this.state.name} Your Message Was Sent.`,\n            valOrNah1: \"is-valid\",\n            valOrNah2: \"is-valid\",\n            valOrNah3: \"is-valid\",\n            errMsg: \"\"\n          }); //reset entire form and state\n\n          setTimeout(() => {\n            this.props.toggle();\n            this.setState({\n              passMsg: \"\",\n              errMsg: \"\",\n              msg: {\n                name: \"\",\n                email: \"\",\n                message: \"\"\n              },\n              valOrNah1: \"\",\n              valOrNah2: \"\",\n              valOrNah3: \"\"\n            });\n          }, 2000);\n        }).catch(err => {\n          this.setState({\n            errMsg: \"server overwhelmed please wait or try again\",\n            passMsg: \"\"\n          });\n        });\n      } else {\n        this.setState({\n          errMsg: \"We Cant Send This, please check for errors\",\n          passMsg: \"\"\n        });\n      }\n    }, 500);\n    e.target.reset();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Form, {\n      style: formio,\n      onSubmit: this.send,\n      \"data-testid\": \"theForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"name\",\n      style: labe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 1\n      }\n    }, \"Name:\"), /*#__PURE__*/React.createElement(Input, {\n      className: this.state.valOrNah1,\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      value: this.state.msg.name,\n      onChange: e => {\n        this.setState({\n          msg: { ...this.state.msg,\n            name: e.target.value\n          }\n        });\n      },\n      placeholder: \"Name...\",\n      style: {\n        WebkitTextFillColor: '#000'\n      },\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(FormText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 1\n      }\n    }, \"What name can I refer to you as?\")), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"email\",\n      style: labe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 1\n      }\n    }, \"Email:\"), /*#__PURE__*/React.createElement(Input, {\n      className: this.state.valOrNah2,\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      value: this.state.msg.email,\n      onChange: e => {\n        this.setState({\n          msg: { ...this.state.msg,\n            email: e.target.value\n          }\n        });\n      },\n      placeholder: \"Email...\",\n      style: {\n        WebkitTextFillColor: '#000'\n      },\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(FormText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 1\n      }\n    }, \"You will not recieve any spam or emails period.\")), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      htmlFor: \"message\",\n      style: labe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 1\n      }\n    }, \"Message:\"), /*#__PURE__*/React.createElement(Input, {\n      className: this.state.valOrNah3,\n      type: \"textarea\",\n      name: \"message\",\n      id: \"message\",\n      value: this.state.msg.message,\n      onChange: e => {\n        this.setState({\n          msg: { ...this.state.msg,\n            message: e.target.value\n          }\n        });\n      },\n      placeholder: \"Message...\",\n      style: {\n        WebkitTextFillColor: '#000'\n      },\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 1\n      }\n    }), /*#__PURE__*/React.createElement(FormText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Err, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, this.state.errMsg), /*#__PURE__*/React.createElement(Pass, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 1\n      }\n    }, this.state.passMsg))), /*#__PURE__*/React.createElement(Button, {\n      style: formBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 1\n      }\n    }, \"Send\"));\n  }\n\n}\n\nexport default Form_;","map":{"version":3,"sources":["/home/tgc/Desktop/newSite/-/src/comps/home/Form.js"],"names":["React","axios","Err","Pass","formBtn","formio","Form","FormGroup","Input","Label","Button","FormText","name_","email_","msg_","labe","WebkitTextFillColor","fontWeight","Form_","Component","constructor","props","state","valOrNah1","valOrNah2","valOrNah3","msg","name","email","message","errMsg","passMsg","send","bind","e","preventDefault","setState","setTimeout","post","process","env","REACT_APP_sendmail","then","res","toggle","catch","err","target","reset","render","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport { Err,Pass,formBtn,formio} from '../../util/contactStyles'\nimport {Form,FormGroup,Input,Label, Button , FormText } from 'reactstrap';\nimport {name_,email_,msg_} from '../../util/contactValidations'\n\nconst labe = {WebkitTextFillColor:'#fff',fontWeight:'bolder'}\nclass Form_ extends React.Component{\nconstructor(props){\nsuper(props)\nthis.state={\nvalOrNah1:'',valOrNah2:'',valOrNah3:'',\nmsg:{name:'',email:'',message:''},\nerrMsg:'',passMsg:''\n}\n\nthis.send = this.send.bind(this)\n\n}\n\n\nsend(e){\ne.preventDefault()\n\n!name_(this.state.msg.name)?this.setState({//check name\nerrMsg:\"We Cant Send This, please check for errors\",\nvalOrNah1:\"is-invalid\",\npassMsg:\"\"\n}):this.setState({valOrNah1:\"is-valid\"});\n\n!email_(this.state.msg.email)?this.setState({//check email\nerrMsg:\"We Cant Send This, please check for errors\",\nvalOrNah2:\"is-invalid\",\npassMsg:\"\"\n}):this.setState({valOrNah2:\"is-valid\"});\n\n\n!msg_(this.state.msg.message)?this.setState({//check msg\nerrMsg:\"We Cant Send This, please check for errors\",\nvalOrNah3:\"is-invalid\",\npassMsg:\"\"\n}):this.setState({valOrNah3:\"is-valid\"});\n\nsetTimeout(()=>{//take a sec to let state settle then check vals\nif(this.state.valOrNah1 === 'is-valid' && this.state.valOrNah2 === 'is-valid' && this.state.valOrNah3 === 'is-valid'){\naxios.post(process.env.REACT_APP_sendmail\n,this.state.msg)\n.then(res=>{\nthis.setState({\npassMsg:`Thank You ${this.state.name} Your Message Was Sent.`,\nvalOrNah1:\"is-valid\",valOrNah2:\"is-valid\",valOrNah3:\"is-valid\",errMsg:\"\"\n})\n//reset entire form and state\nsetTimeout(()=>{this.props.toggle();this.setState({passMsg:\"\",errMsg:\"\",msg:{name:\"\",email:\"\",message:\"\"},valOrNah1:\"\",valOrNah2:\"\",valOrNah3:\"\",})},2000)\n\n}).catch(err=>{this.setState({errMsg:\"server overwhelmed please wait or try again\",passMsg:\"\"})})\n\n}else{this.setState({errMsg:\"We Cant Send This, please check for errors\",passMsg:\"\"})}\n},500)\n\n\n\ne.target.reset()\n}\n\n\nrender(){\nreturn(\n\n<Form style={formio}  onSubmit={this.send} data-testid=\"theForm\">\n<FormGroup>\n<Label htmlFor=\"name\" style={labe}>Name:</Label>\n<Input className={this.state.valOrNah1} type=\"text\" name=\"name\" id=\"name\" value={this.state.msg.name} onChange={(e)=>{this.setState({msg:{...this.state.msg,name:e.target.value}})}} placeholder=\"Name...\"  style={{WebkitTextFillColor:'#000'}} required/>\n<FormText>What name can I refer to you as?</FormText>\n</FormGroup>\n<FormGroup>\n<Label htmlFor=\"email\" style={labe}>Email:</Label>\n<Input className={this.state.valOrNah2}  type=\"email\" name=\"email\" id=\"email\" value={this.state.msg.email} onChange={(e)=>{this.setState({msg:{...this.state.msg,email:e.target.value}})}} placeholder=\"Email...\" style={{WebkitTextFillColor:'#000'}} required/>\n<FormText>You will not recieve any spam or emails period.</FormText>\n</FormGroup>\n<FormGroup>\n<Label htmlFor=\"message\" style={labe}>Message:</Label>\n<Input className={this.state.valOrNah3} type=\"textarea\" name=\"message\" id=\"message\" value={this.state.msg.message} onChange={(e)=>{this.setState({msg:{...this.state.msg,message:e.target.value}})}} placeholder=\"Message...\" style={{WebkitTextFillColor:'#000'}} required/>\n<FormText><Err>{this.state.errMsg}</Err>\n<Pass>{this.state.passMsg}</Pass></FormText>\n</FormGroup>\n<Button style={formBtn}>Send</Button>\n</Form>\n\n)\n}\n}\n\n\n\nexport default Form_"]},"metadata":{},"sourceType":"module"}